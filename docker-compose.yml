# TraceQ - Enterprise Requirements AI
# Docker Compose Configuration
# 
# This configuration sets up the complete TraceQ system with:
# - PostgreSQL: Database for storing application data
# - MinIO: Object storage for documents and files
# - Redpanda: Message streaming for background processing
# - Backend: FastAPI application with AI agents
#
# Quick Start:
#   docker-compose up -d
#   Access the application at http://localhost:8000
#
# Environment Variables:
#   Set ANTHROPIC_API_KEY, PINECONE_API_KEY, etc. in .env file
#   or export them before running docker-compose up

version: '3.8'
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: erai
      POSTGRES_PASSWORD: erai
      POSTGRES_DB: erai
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
  redpanda:
    image: redpandadata/redpanda:latest
    command: redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
  backend:
    build: ./backend
    environment:
      OBJECT_STORE: /object_store
      LLM_PROVIDER: ollama
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/object_store
    depends_on:
      - postgres
      - minio
      - redpanda
volumes:
  pgdata:
  minio:
  backend_data:
